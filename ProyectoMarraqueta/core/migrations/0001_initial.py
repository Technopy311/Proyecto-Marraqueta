# Generated by Django 5.0.6 on 2024-06-24 01:36

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_guard', models.BooleanField(default=None, null=True, verbose_name='is guard')),
                ('last_name', models.CharField(max_length=25, null=None, verbose_name='Apellido')),
                ('run', models.PositiveBigIntegerField(error_messages={'unique': 'Ese RUN ya se encuentra registrado.'}, null=True, unique=True, verbose_name='RUN')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BicycleHolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracker', models.JSONField(default=core.models.BicycleHolder.get_default_json)),
                ('capacity', models.SmallIntegerField(default=1, verbose_name='Capacity')),
                ('location', models.CharField(max_length=30, verbose_name='Location')),
                ('nearest_building', models.CharField(choices=[('K', 'K'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('E', 'E')], max_length=1, verbose_name='Nearest building')),
                ('coord_x', models.FloatField(default=None, null=True, verbose_name='X Coordinate location')),
                ('coord_y', models.FloatField(default=None, null=True, verbose_name='Y Coordinate location')),
            ],
        ),
        migrations.CreateModel(
            name='Guard',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('connection', models.CharField(default=None, max_length=40, null=True, verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Guardia',
                'verbose_name_plural': 'Guardias',
            },
            bases=('core.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bicycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='Bicycle model')),
                ('colour', models.CharField(max_length=100, verbose_name='Bicycle color')),
                ('is_saved', models.BooleanField(default=False, verbose_name='Am I saved?')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation DateTime')),
                ('image', models.ImageField(default=None, null=True, upload_to='')),
                ('holder_pk', models.SmallIntegerField(default=None, null=True, verbose_name='Holder_PK')),
                ('bicy_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EspModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(default='0.0.0.0', max_length=15)),
                ('latest_online', models.DateTimeField(null=True, verbose_name='Lastest online')),
                ('bicycleholder', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.bicycleholder')),
            ],
        ),
        migrations.CreateModel(
            name='KeyChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=12, null=True, verbose_name='UUID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
